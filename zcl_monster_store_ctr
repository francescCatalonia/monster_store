CLASS zcl_monster_store_ctr DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    TYPES: BEGIN OF gty_s_monster_details,
             color         TYPE string,
             scare_scoring TYPE i,
           END OF gty_s_monster_details.

    TYPES: BEGIN OF gty_s_monster,
             id      TYPE bu_partner,
             details TYPE gty_s_monster_details,
             owner   TYPE uname,
           END OF gty_s_monster.
    TYPES gty_t_monster TYPE STANDARD TABLE OF gty_s_monster WITH KEY id.

    METHODS constructor
      IMPORTING iv_user_id TYPE uname.
    METHODS select_user_monsters
      IMPORTING ir_monster_id      TYPE rpfifr_partner_rangetabletype OPTIONAL
      RETURNING VALUE(rt_monsters) TYPE zcl_monster_store_ctr=>gty_t_monster.
    METHODS configure_monster
      IMPORTING is_monster TYPE zcl_monster_store_ctr=>gty_s_monster
      RAISING zcx_tms_monster_exception.
    METHODS purchase_monster
      IMPORTING is_monster TYPE zcl_monster_store_ctr=>gty_s_monster
      RAISING zcx_tms_monster_exception.
  PROTECTED SECTION.
  PRIVATE SECTION.
    DATA _go_monster_service TYPE REF TO zif_monster_srv.
    DATA _gv_user_id TYPE uname.
    METHODS _mapservice2monster
      IMPORTING
        it_monsters_service TYPE zif_monster_srv=>gty_t_monster
      RETURNING
        VALUE(rt_monsters)  TYPE zcl_monster_store_ctr=>gty_t_monster.
ENDCLASS.



CLASS zcl_monster_store_ctr IMPLEMENTATION.

  METHOD constructor.
**********************************************************************
* En el constructor se inicializan e implementan todas las variables
* y clases que se van a utilizar en el ciclo de vida de la clase
**********************************************************************
    me->_go_monster_service = zcl_monster_provider=>factory( ).
    me->_gv_user_id = iv_user_id.
  ENDMETHOD.

  METHOD select_user_monsters.
**********************************************************************
* Dentro de este método tenemos la lógica para la selección de
* monstruos del usuario
**********************************************************************
    DATA(lr_user_id_range) = VALUE issr_r_uname( sign = 'I' option = 'EQ' ( low = me->_gv_user_id ) ).
    DATA(lt_monsters) = me->_go_monster_service->select_monster( ir_monster_id = ir_monster_id[] ir_user_id_range = lr_user_id_range[] ).

**********************************************************************
* Mapeamos las estructura del servicio con las estructuras propias
* de la clase
**********************************************************************
    rt_monsters = me->_mapservice2monster( lt_monsters ).
  ENDMETHOD.

  METHOD configure_monster.
**********************************************************************
* Dentro de este método tenemos la lógica para la configuración de un
* monstruo. Aquí se decide si se debe crear si és nuevo, modificar,
* o por si por alguna razón antes debemos borrarlo
**********************************************************************
*   CREATE?
    me->_go_monster_service->create_monster( is_monster ).
*   MODIFY?
    me->_go_monster_service->modify_monster( is_monster ).
*   DELETE?
    me->_go_monster_service->delete_monster( is_monster ).
  ENDMETHOD.

  METHOD purchase_monster.
**********************************************************************
* Dentro de este método tenemos la lógica para la compra de monstruos.
* Aquí se indica quien es el dueño que debe ser el que nos han
* informado al crear la clase controladora
**********************************************************************
*   El monstruo ahora tiene dueño
    DATA(ls_monster) = is_monster.

    ls_monster-owner = me->_gv_user_id.
    me->_go_monster_service->modify_monster( is_monster ).

    me->_go_monster_service->purchase_monster( is_monster ).
  ENDMETHOD.


  METHOD _mapservice2monster.
**********************************************************************
* Dentro de este método se realiza el mapeo de las estructuras del
* servicio con las estructura del controlador
**********************************************************************
    rt_monsters = VALUE gty_t_monster( FOR ls_monster_service IN it_monsters_service ( id = ls_monster_service-id
                                                                                       details = ls_monster_service-details
                                                                                       owner = ls_monster_service-owner
                                                                                     ) ).
  ENDMETHOD.

ENDCLASS.
